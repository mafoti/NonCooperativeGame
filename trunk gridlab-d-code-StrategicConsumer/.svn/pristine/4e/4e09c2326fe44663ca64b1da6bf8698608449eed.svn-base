// $Id: randoms.glm 4738 2014-07-03 00:55:39Z dchassin $
// Copyright (C) 2008 Battelle Memorial Institute
//
// This can be used as an example and a test of random functionals 
//

#setenv path=c:\mingw\bin
#set include="c:\projects\gridlab-d\trunk\core"
//#set debug=1

//#include "msvc_debugger.glm"

// randoms

class randoms {
	double degenerate;
	double normal;
	double uniform;
	double lognormal;
	double bernoulli;
	double pareto;
	double rayleigh;
	double weibull;
	double beta;
	double gamma;
	double triangle;
	double sampled;

	intrinsic create(object parent)
	{
		return SUCCESS;
	};

	intrinsic init(object parent)
	{
		return SUCCESS;
	};

	intrinsic sync(timestamp t0, timestamp t1)
	{
		return TS_NEVER;
	};

};

object randoms:..100 {
	degenerate random.degenerate(2);
	normal random.normal(2,1);
	uniform random.uniform(2,7);
	lognormal random.lognormal(1,1);
	bernoulli random.bernoulli(0.7);
	pareto random.pareto(1,3);
	rayleigh random.rayleigh(2);
	weibull random.weibull(2,2);
	beta random.beta(0.2,0.6);
	gamma random.gamma(0.5);
	triangle random.triangle(2,10);
	sampled random.sampled(1,2,3,4,5,6,7,8,9,10);
}

// DATA COLLECTION
module tape;

object collector {
	group "class=randoms";
	file degenerate.csv;
	property "min(degenerate),mean(degenerate),std(degenerate),max(degenerate)";
	interval 0;
	limit 1;
};

object collector {
	group "class=randoms";
	file normal.csv;
	property "min(normal),mean(normal),std(normal),max(normal)";
	interval 0;
	limit 1;
};

object collector {
	group "class=randoms";
	file sampled.csv;
	property "min(sampled),mean(sampled),std(sampled),max(sampled)";
	interval 0;
	limit 1;
};
