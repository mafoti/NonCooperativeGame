// $Id: assert.glm 4738 2014-07-03 00:55:39Z dchassin $

class complex_assert {
	char32 target;
	complex value;
	double within;
	intrinsic postsync(TIMESTAMP t0, TIMESTAMP t1)
	{
		if (t0>0)
		{
			complex x;
			gl_get_value(my->parent,target, x);
			complex m = (x-value).Mag();
			if (!m.IsFinite() || m>within){
				//gl_throw("assert failed on %s: %s (%g%+gi) not within %f of %g%+gi", 
				gl_error("assert failed on %s: %s (%g%+gi) not within %f of %g%+gi", 
					gl_name(my->parent), target, x.Re(), x.Im(), within, value.Re(), value.Im());
				return t1;
				}
			return TS_NEVER;
		} else {
			return t1+1;
		}
	};
}; 


class double_assert {
	char32 target;
	double value;
	double within;
	intrinsic postsync(TIMESTAMP t0, TIMESTAMP t1)
	{
		if (t0>0)
		{
			double x;
			gl_get_value(my->parent,target, x);
			double m = abs(x-value);
			if (_isnan(m) || m>within){				
				gl_error("assert failed on %s: %s %g not within %f of %g", 
					gl_name(my->parent), target, x, within, value);
				return t1;
				}
			return TS_NEVER;
		} else {
			return t1+1;
		}
	};
}; 
