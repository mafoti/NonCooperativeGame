// $Id: test_meter.glm 4738 2014-07-03 00:55:39Z dchassin $
//
// Powerflow module self-test

#set include="../../core"
#include "../../core/rt/msvc_debugger.glm"

#include "assert.glm"

clock {
	timezone EST+5EDT;
	starttime '2000-01-01 00:00:00 EST';
}

module powerflow;

///////////////////////////////////////////////////////
// test 6: meter
///////////////////////////////////////////////////////
// Single phase at phase A
object overhead_line {
	phases AN;
	length 300 ft;
	configuration object line_configuration {
		conductor_A object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		conductor_N object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		spacing object line_spacing {
			distance_AN 5.0249 ft;
		};
	};
	from object node {
		name meter_fA;
		phases AN;
		voltage_A 7200 + 0j;
		nominal_voltage 7200;
		maximum_voltage_error 1;
		
	};
	to object meter {
		name meter_tmeterA;
		phases AN;
		voltage_A 7200 + 0j;
		nominal_voltage 7200;
		object load {
			name meter_tA;
			phases AN;
			voltage_A 7200 + 0j;
			constant_current_A  1;
			constant_power_A 1500 + 750j;
			constant_impedance_A 1000 + 2000j;
			nominal_voltage 7200;
		//	maximum_voltage_error 1;		
		};
		object complex_assert {
			target "measured_current_A";			
			value 2.6483 - 2.9840j;
			within 0.01;
		};
		object complex_assert {
			target "measured_current_B";			
			value 0 + 0j;
			within 0.01;
		};
		object complex_assert {
			target "measured_current_C";			
			value 0 + 0j;
			within 0.01;
		};		
		object double_assert {
			target "measured_power";			
			value 28724;
			within 0.1;
		};		
	};	
};


// Single phase at phase B
object overhead_line {
	phases BN;
	length 300 ft;
	configuration object line_configuration {
		conductor_B object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		conductor_N object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		spacing object line_spacing {
			distance_BN 5.0249 ft;
		};
	};
	from object node {
		name meter_fB;
		phases BN;
		voltage_B -3600 - 6235.4j;
		nominal_voltage 7200;
		
	};
	to object meter {
		name meter_tmeterB;
		phases BN;
		voltage_B -3600 - 6235.4j;
		nominal_voltage 7200;
		object load {
			name meter_tB;
			phases BN;
			voltage_B -3600 - 6235.4j;
			constant_current_B  -0.5 - 0.866j;
			constant_power_B 1500 + 750j;
			constant_impedance_B 1000 + 2000j;
			nominal_voltage 7200;
		};
		object complex_assert {
			target "measured_current_A";			
			value 0+0j;
			within 0.01;
		};	
		object complex_assert {
			target "measured_current_B";			
			value -3.9084-0.8014j;
			within 0.01;
		};	
		object complex_assert {
			target "measured_current_C";			
			value 0+0j;
			within 0.01;
		};
		object double_assert {
			target "measured_power";			
			value 28724;
			within 0.1;
		};		
	};	
};



// Single phase at phase C
object overhead_line {
	phases CN;
	length 300 ft;
	configuration object line_configuration {
		conductor_C object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		conductor_N object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		spacing object line_spacing {
			distance_CN 5.0249 ft;
		};
	};
	from object node {
		name meter_fC;
		phases CN;
		voltage_C -3600 + 6235.4j;
		nominal_voltage 7200;
		maximum_voltage_error 1;		
	};
	to object meter {
		name meter_tmeterC;
		phases CN;
		voltage_C -3600 + 6235.4j;
		nominal_voltage 7200;
		object load {
			name meter_tC;
			phases CN;
			voltage_C -3600 + 6235.4j;
			constant_current_C  -0.5+0.866j;
			constant_power_C 1500 + 750j;
			constant_impedance_C 1000 + 2000j;
			nominal_voltage 7200;
		};
		object complex_assert {
			target "measured_current_A";			
			value  0+0j;
			within 0.01;
		};	
		object complex_assert {
			target "measured_current_B";			
			value  0+0j;
			within 0.01;
		};	
		object complex_assert {
			target "measured_current_C";			
			value  1.260 + 3.7854j;
			within 0.01;
		};		
		object double_assert {
			target "measured_power";			
			value 28724;
			within 0.1;
		};		
	};	
};



// POLYPHASES
object overhead_line {
	phases ABCN;
	length 300 ft;
	configuration object line_configuration {
		conductor_A object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		conductor_B object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		conductor_C object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		conductor_N object overhead_line_conductor {
			geometric_mean_radius 0.00446 ft;
			resistance 1.12 Ohm/mile;
			rating.summer.continuous 500;
		};
		spacing object line_spacing {
			distance_AB 7 ft;
			distance_BC 7 ft;
			distance_AC 7 ft;
			distance_AN 5.0249 ft;
			distance_BN 5.0249 ft;
			distance_CN 5.0249 ft;			
		};
	};
	from object node {
		name meter_fABC;
		phases ABCN;
		voltage_A 7200 + 0j;		
		voltage_B -3600 - 6235.4j;
		voltage_C -3600 + 6235.4j;		
		nominal_voltage 7200;
	};
	to object meter {
		name meter_tmeterABC;
		phases ABCN;
		voltage_A 7200 + 0j;		
		voltage_B -3600 - 6235.4j;
		voltage_C -3600 + 6235.4j;		
		nominal_voltage 7200;
		object load {
			name meter_tABC;
			phases ABCN;
			voltage_A 7200 + 0j;		
			voltage_B -3600 - 6235.4j;
			voltage_C -3600 + 6235.4j;		
			constant_current_A 1;
			constant_current_B  -0.5-0.866j;
			constant_current_C  -0.5+0.866j;
			constant_power_A 1500 + 750j;
			constant_power_B 1500 + 750j;
			constant_power_C 1500 + 750j;
			constant_impedance_A 1000 + 2000j;
			constant_impedance_B 1000 + 2000j;
			constant_impedance_C 1000 + 2000j;
			nominal_voltage 7200;
		};
		object complex_assert {
			target "measured_current_A";			
			value  2.6483 - 2.9840j;
			within 0.01;
		};	
		object complex_assert {
			target "measured_current_B";			
			value -3.9084-0.8014j;
			within 0.01;
		};	
		object complex_assert {
			target "measured_current_C";			
			value  1.260 + 3.7854j;
			within 0.01;
		};		
		object double_assert {
			target "measured_power";			
			value 86174.3;
			within 0.1;
		};				
	};		
};