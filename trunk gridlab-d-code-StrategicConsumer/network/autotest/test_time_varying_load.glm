// test of PW interface when there is a time varying load object in GLD

#set relax_naming_rules=1
#set minimum_timestep=1;
#set init_sequence=DEFERRED
#set suppress_repeat_messages=FALSE

module tape;
module assert;
module powerflow {
	solver_method FBS;
}
module climate;
module residential;



clock{
	timezone PST+8PDT;
	starttime '2001-07-25 01:00:00';
	stoptime '2001-07-25 01:05:00';
}

#if run_powerworld==TRUE
#define powerworld=true;
#endif

#ifdef powerworld

module network;

//Copy the model into the specific autotest folder
#system copy /y ..\TS9Bus.PWB .\TS9Bus.PWB

object overhead_line_conductor:100 {
	geometric_mean_radius 0.0244;
	resistance 0.306;
}

object overhead_line_conductor:101 {
	geometric_mean_radius 0.00814;
	resistance 0.592;
}

object line_spacing:200 {
	distance_AB 2.5;
	distance_BC 4.5;
	distance_AC 7.0;
	distance_AN 5.656854;
	distance_BN 4.272002;
	distance_CN 5.0;
}

object line_configuration:300 {
	conductor_A overhead_line_conductor:100;
	conductor_B overhead_line_conductor:100;
	conductor_C overhead_line_conductor:100;
	conductor_N overhead_line_conductor:101;
	spacing line_spacing:200;
}

object transformer_configuration:400 {
	connect_type DELTA_DELTA;
	install_type PADMOUNT;
	power_rating 6000;
	primary_voltage 230000;
	secondary_voltage 2400;
	resistance 0.01;
	reactance 0.06;
}

object triplex_line_configuration {
      name trip_line_config;
      conductor_1 object triplex_line_conductor {
            resistance 0.97;
            geometric_mean_radius 0.01111;
            };
      conductor_2 object triplex_line_conductor {
            resistance 0.97;
            geometric_mean_radius 0.01111;
            };
      conductor_N object triplex_line_conductor {
            resistance 0.97;
            geometric_mean_radius 0.01111;
            };
      insulation_thickness 0.08;
      diameter 0.368;
}

object pw_model{
	name MyPwModel;
	model_name `${workdir}\TS9Bus.PWB`;
}

object pw_load{
	name myPwLoad5;
	parent MyPwModel;
	powerworld_bus_num 5;
	powerworld_load_id 1;
	power_threshold 1 VA;
	object complex_assert {
		target load_power;
		object player {
			property value;
			file ../LoadPower.player;
			loop 1;
		};
		within .01;
	};
}

object substation {
	parent myPwLoad5;
	name node1;
	bustype SWING;
	phases "ABCD";
	base_power 100 MVA;
	nominal_voltage 230000.0;
	reference_phase PHASE_A;
}

object overhead_line:12 {
	phases "ABCD";
	from node1;
	to node:2;
	length 2000;
	configuration line_configuration:300;
}

object node:2 {
	phases "ABCD";
	voltage_A +7199.558+0.000j;
	voltage_B -3599.779-6235.000j;
	voltage_C -3599.779+6235.000j;
	nominal_voltage 230000.0;
}

object transformer:23 {
	phases "ABCD";
	from node:2;
	to node:3;
	configuration transformer_configuration:400;
}

object node:3 {
	phases "ABCD";
	voltage_A +2401.777+0.000j;
	voltage_B -1200.889-2080.000j;
	voltage_C -1200.889+2080.000j;
	nominal_voltage 2400;
}

object overhead_line:34 {
	phases "ABCD";
	from node:3;
	to load:4;
	length 2500;
	configuration line_configuration:300;
}


object load:4 {
	phases "ABCN";
	constant_impedance_A 1000+2000j;
	constant_impedance_B 1300+1200j;
	constant_impedance_B 1100+2100j;	
	object player {
		property constant_impedance_A;
		file ../Za.player;
		loop 1;
	};
		object player {
		property constant_impedance_B;
		file ../Zb.player;
		loop 1;
	};
		object player {
		property constant_impedance_C;
		file ../Zc.player;
		loop 1;
	};
	nominal_voltage 2400;
}

#else
#warning No PowerWorld
#endif
