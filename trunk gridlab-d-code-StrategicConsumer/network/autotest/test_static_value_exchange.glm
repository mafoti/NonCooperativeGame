// test to check if PW and GLD pass information correctly, single static value

#set relax_naming_rules=1
#set minimum_timestep=1;
#set init_sequence=DEFERRED
#set suppress_repeat_messages=FALSE

module tape;
module assert;
module powerflow {
	solver_method FBS;
}

clock{
	timezone PST+8PDT;
	starttime '2001-07-25 01:00:00';
	stoptime '2001-07-25 01:05:00';
}

#if run_powerworld==TRUE
#define powerworld=true;
#endif

#ifdef powerworld

module network;

//Copy the model into the specific autotest folder
#system copy /y ..\TS9Bus.PWB .\TS9Bus.PWB

object pw_model {
	name MyPwModel;
	model_name `${workdir}\TS9Bus.PWB`;
}

object pw_load {
	name MyPwLoad;
	parent MyPwModel;
	powerworld_bus_num 5;
	powerworld_load_id 1;
	power_threshold 1;
}

object substation {
	parent MyPwLoad;
	bustype SWING;
	phases "ABCN";
	nominal_voltage 230000;
	base_power 100 MVA;
	reference_phase PHASE_A;
		object load {
			phases "ABCN";
			constant_impedance_A 1000+2000j;
			constant_impedance_B 1000+1000j;
			constant_impedance_C 1200+800j;
			nominal_voltage 230000;
		};
		object complex_assert {
			target positive_sequence_voltage;
			within 1;
			value 227022.553+1572.658j;
			in '2001-07-25 01:03:00 PDT'; 
		};
}	

#else
#warning No PowerWorld
#endif
