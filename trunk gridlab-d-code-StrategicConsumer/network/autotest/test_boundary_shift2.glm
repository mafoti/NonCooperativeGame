// tests PW interface with a small feeder in GLD, nodes 1 and 2 moved to the PW model, verifies solution is the same
// as when all of the GLD nodes are kept inside of GLD

#set relax_naming_rules=1
#set minimum_timestep=1;
#set init_sequence=DEFERRED
#set suppress_repeat_messages=FALSE

module tape;
module assert;
module powerflow {
	solver_method FBS;
}

clock{
	timezone PST+8PDT;
	starttime '2001-07-25 01:00:00';
	stoptime '2001-07-25 01:05:00';
}

#if run_powerworld==TRUE
#define powerworld=true;
#endif

#ifdef powerworld

module network;

//Copy the model into the specific autotest folder
#system copy /y ..\TS9Bus_1node.pwb .\TS9Bus_1node.pwb

object overhead_line_conductor:100 {
	geometric_mean_radius 0.0244;
	resistance 0.306;
}

object overhead_line_conductor:101 {
	geometric_mean_radius 0.00814;
	resistance 0.592;
}

object line_spacing:200 {
	distance_AB 2.5;
	distance_BC 4.5;
	distance_AC 7.0;
	distance_AN 5.656854;
	distance_BN 4.272002;
	distance_CN 5.0;
}

object line_configuration:300 {
	conductor_A overhead_line_conductor:100;
	conductor_B overhead_line_conductor:100;
	conductor_C overhead_line_conductor:100;
	conductor_N overhead_line_conductor:100;
	spacing line_spacing:200;
}

object transformer_configuration:400 {
	connect_type DELTA_DELTA;
	install_type PADMOUNT;
	power_rating 6000;
	primary_voltage 230000;
	secondary_voltage 2400;
	resistance 0.01;
	reactance 0.06;
}

object pw_model{
	name MyPwModel;
	model_name `${workdir}\TS9Bus_1node.pwb`;
}

object pw_load{
	name myPwLoad;
	parent MyPwModel;
	powerworld_bus_num 10;
	powerworld_load_id 1;
	power_threshold 1 VA;
}

object substation {
	parent myPwLoad;
	name node2;
	bustype SWING;
	phases "ABCD";
	base_power 100 MVA;
	reference_phase PHASE_A;
	nominal_voltage 230000.0;
}

object transformer:23 {
	phases "ABCD";
	from node2;
	to node:3;
	configuration transformer_configuration:400;
}

object node:3 {
	phases "ABCD";
	nominal_voltage 2400;
}

object overhead_line:34 {
	phases "ABCD";
	from node:3;
	to load:4;
	length 2500;
	configuration line_configuration:300;
}


object load:4 {
	phases "ABCD";
	constant_impedance_A 1000+2000j;
	constant_impedance_B 1000-2000j;
	constant_impedance_C 1000;
	maximum_voltage_error 0.001;
	nominal_voltage 2400;
	object complex_assert {
		target voltage_A;
		within 1;
		value 2502.29+205.772j;
	};
		object complex_assert {
		target voltage_B;
		within 1;
		value -1072.44-2272.73j;
	};
		object complex_assert {
		target voltage_C;
		within 1;
		value -1429.93+2066.76j;
	};	
}

#else
#warning No PowerWorld
#endif
